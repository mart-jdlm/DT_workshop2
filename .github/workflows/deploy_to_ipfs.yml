on:
  push:
    branches:
      - main  # Déclenche le workflow à chaque push sur la branche main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl

      - name: Upload to IPFS via Pinata
        env:
          PINATA_API_KEY: ${{ secrets.PINATA_API_KEY }}
          PINATA_SECRET_API_KEY: ${{ secrets.PINATA_SECRET_API_KEY }}
        run: |
          # Créez un finame: Deploy to IPFS

on:
  push:
    branches:
      - main  # Déclenche le workflow à chaque push sur la branche main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl

      - name: Upload to IPFS via Pinata
        env:
          PINATA_API_KEY: ${{ secrets.PINATA_API_KEY }}
          PINATA_SECRET_API_KEY: ${{ secrets.PINATA_SECRET_API_KEY }}
        run: |
          # Se déplacer dans le dossier du site web
          cd first_decentralized_website

          # Créez un fichier ZIP du site web
          zip -r site.zip .

          # Téléversez le fichier ZIP sur Pinata
          curl -X POST https://api.pinata.cloud/pinning/pinFileToIPFS \
            -H "pinata_api_key: $PINATA_API_KEY" \
            -H "pinata_secret_api_key: $PINATA_SECRET_API_KEY" \
            -F "file=@site.zip"chier ZIP du site web
          zip -r site.zip .

          # Téléversez le fichier ZIP sur Pinata
          curl -X POST https://api.pinata.cloud/pinning/pinFileToIPFS \
            -H "pinata_api_key: $PINATA_API_KEY" \
            -H "pinata_secret_api_key: $PINATA_SECRET_API_KEY" \
            -F "file=@site.zip"
